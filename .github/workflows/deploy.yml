name: Deploy Cloudflare Worker with Queue

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Cloudflare Workers
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check Authentication
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          if [ -z "$CLOUDFLARE_API_TOKEN" ]; then
            echo "❌ CLOUDFLARE_API_TOKEN secret is not set in GitHub repository"
            echo "Please add this secret in GitHub repository settings"
            exit 1
          fi
          echo "✅ API Token found"
          npx wrangler whoami

      - name: Create Cloudflare Queue (if needed)
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          echo "Creating queue with paid plan..."
          npx wrangler queues create ticker-dividend-queue || echo "Queue might already exist, continuing..."

      - name: Deploy Worker (Minimal First)
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          echo "Deploying minimal worker first..."
          npx wrangler deploy --config wrangler-minimal.toml || npx wrangler deploy --env="" --compatibility-date=2024-08-01

      - name: Get Worker URL
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          echo "Getting deployed worker information..."
          npx wrangler list || echo "Could not list workers"
          
      - name: Test Worker Health
        run: |
          echo "Waiting for deployment to propagate..."
          sleep 10
          
          # Try multiple possible worker URLs
          URLS=(
            "https://ticker-backend-worker2.thilinatpr.workers.dev"
            "https://ticker-backend-worker2-deployed.thilinatpr.workers.dev"
            "https://ticker-backend-worker2.thilinas-projects-f6f25033.workers.dev"
          )
          
          for url in "${URLS[@]}"; do
            echo "Testing: $url/health"
            if curl -f -m 10 "$url/health"; then
              echo "✅ Worker is healthy at: $url"
              echo "WORKER_URL=$url" >> $GITHUB_ENV
              break
            else
              echo "❌ Health check failed for: $url"
            fi
          done